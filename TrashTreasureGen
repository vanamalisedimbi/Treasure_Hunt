local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TreasureModel = ReplicatedStorage:WaitForChild("TreasureModel")
local TrashModel = ReplicatedStorage:WaitForChild("TrashModel")

-- Define the six spawn locations
local spawnLocations = {
	Vector3.new(72.692, 50.082, -672.163),
	Vector3.new(-184.463, 29.5, -700.891),
	Vector3.new(-749, 19.228, 53),
	Vector3.new(-668, 17.618, 634),
	Vector3.new(17, 19.681, 453),
	Vector3.new(434, 16.5, 851)
}

-- Function to shuffle locations randomly
local function shuffleTable(t)
	for i = #t, 2, -1 do
		local j = math.random(1, i)
		t[i], t[j] = t[j], t[i]  -- Swap elements
	end
end

-- Function to spawn a model at a given position
local function spawnModel(modelTemplate, position)
	local modelClone = modelTemplate:Clone()

	-- Set PrimaryPart so we can position the entire model properly
	if modelClone.PrimaryPart then
		modelClone:SetPrimaryPartCFrame(CFrame.new(position))
	else
		-- If no PrimaryPart, manually move all parts
		local offset = position - modelClone:GetBoundingBox().Position
		for _, part in ipairs(modelClone:GetDescendants()) do
			if part:IsA("BasePart") then
				part.Position = part.Position + offset
			end
		end
	end

	modelClone.Parent = game.Workspace  -- Add to game world
end

-- Main execution
shuffleTable(spawnLocations)  -- Shuffle the locations

-- Spawn 3 TreasureModels at the first 3 locations
for i = 1, 3 do
	spawnModel(TreasureModel, spawnLocations[i])
end

-- Spawn 3 TrashModels at the remaining 3 locations
for i = 4, 6 do
	spawnModel(TrashModel, spawnLocations[i])
end
